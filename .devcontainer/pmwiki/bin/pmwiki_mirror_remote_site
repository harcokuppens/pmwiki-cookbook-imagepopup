#!/bin/bash

USAGE="
USAGE 

    pmwiki_mirror_remote_site [-d SUBDIR]* [-c COOKBOOKNAME]* [-s MAXSIZE] [-l LOCALPMWIKIDIR]  USER@REMOTEHOST:REMOTEPMWIKIDIR 

DESCRIPTION

    Mirror a remote site without overwriting the new cookbook we are locally developing.
    In that way we can test our cookbook within the remote setup and data.

    The local site could have a different pmwiki install as the remote site.
    We can use this to test the remote site in a new pmwiki version.
    Only added items to an original pmwiki installation are mirrored. That is only the 
    configuration, cookbook extensions,  the wiki pages and its uploads are
    mirrored from the remote site. The means we mirror only the subfolders local/, cookbook/,
    wiki.d/, uploads/ and pub/.

    The name of the new cookbook is determined from the COOKBOOK environment variable.
    Your cookbook X can consist of directories pmwiki/cookbook/X/ and pmwiki/pub/X/. When
    the remote site is mirrored we make sure that we keep these folders of your cookbook X,
    because when mirroring from a remote side not having these folders they would get removed!
    So what you finally get is the remote cookbook/ and pub/ folder with your cookbook folders
    added.

    The argument USER@REMOTEHOST:REMOTEPMWIKIDIR is an rsync remote location using the SSH protocol
    to mirror the files.

    This script's behavior:
      - the name of your cookbook is taken from the COOKBOOK environment variable.
      - the folder /var/www/html/pmwiki is taken as the local pmwiki folder into which data gets mirrored.
      - files bigger then 0.5MB are skipped from mirroring

    Options:
    
     -d SUBDIR
        Add extra sub directory in remote location to be mirrored. Multiple -d options may be specified.
     -c COOKBOOKNAME
        Specify a cookbook to excluded from mirroring. By default the value from the COOKBOOK environment 
        variable is taken, but is ignored if this option is given. Multiple -c options may be specified. 
     -s MAXSIZE 
        Files with this size or larger are not mirrored. Default MAXSIZE=0.5m (half megabyte).
        With MAXSIZE=0 then all files are mirrored.  
     -l LOCALPMWIKIDIR 
        Specifiy a different location for the local PmWiki directory. Default is /var/www/html/pmwiki.

"

# set default values
extra_dirs=()
cookbooks=()
local_pmwiki_dir="/var/www/html/pmwiki"
max_size="0.5m"

# parse options
while [[ "${1:0:1}" == "-" ]]; do
    if [[ "$1" == "-d" ]]; then
        extra_dirs+=("$2")
        shift 2
    elif [[ "$1" == "-c" ]]; then
        cookbooks+=("$2")
        shift 2
    elif [[ "$1" == "-s" ]]; then
        max_size="$2"
        shift 2
    elif [[ "$1" == "-l" ]]; then
        local_pmwiki_dir="$2"
        shift 2
    else
        echo "ERROR: unknown option $1" 1>&2
        echo "$USAGE" 1>&2
        exit 1
    fi
done

# if COOKBOOK environment variable is set and no cookbook option set
# then take the COOKBOOK environment variable as default value
if [[ "${#cookbooks[@]}" == "0" && -n "$COOKBOOK" ]]; then
    cookbooks=("$COOKBOOK")
fi

# display usage if no positional arguments given
if [[ "$#" != "1" ]]; then
    echo "$USAGE"
    exit 1
fi

# set the remote ssh location to fetch pmwiki from
# should be something like "USER@REMOTEHOST:REMOTEDIR"
remotewiki="$1"

# mirror - https://github.com/harcokuppens/mirror
#   Mirror synchronises contents of sourcedir into destdir which can be on a remote machine,
#   a docker container, or on a docker image. Mirror wraps the rsync command to give it a
#   simpler interface to ease mirror and diffdir operations.

# when mirroring
# - only allow files smaller then 0.5 MB
# - set permissions right for our apache webserver which reads as www-data user
if [[ "$max_size" == 0 ]]; then
    rsync_options="--chmod=ugo-x,u=rw,g=rw,o=rw,Dugo+x"
else
    rsync_options="--max-size=$max_size --chmod=ugo-x,u=rw,g=rw,o=rw,Dugo+x"
fi
# note:
#   by default the default umask can give problems:
#      $ umask -S
#      u=rwx,g=rx,o=rx
#   because rsync honors umask when creating file when mirroring, so group and other won't get the write permission I specified in rsync_options
#   we fixed it by setting the umask by default to 'u=rwx,g=rwx,o=rwx'
#   by adding the following line to the Dockerfile
#       RUN echo "umask 000" >> /etc/profile
#   and in the Dockerfile we made everything withing the home directory of the www-data user `/var/www` owned and editable for this user
#     RUN chown -R www-data:www-data /var/www
#     RUN chmod -R a+rwX /var/www
#   note: we used the homedirectory /var/www/ because when vscode logs in as the
#         www-data user in the container it then writes its remote server files within
#         the folder /var/www/.vscode-server/
#   and enabled the capability in the image to allow you to login as www-data user (which has by default as shell /usr/sbin/nologin)
#     RUN usermod -s /bin/bash www-data

# display info
echo mirror remote website subdirs wiki.d/ uploads/ local/ cookbook/ pub/ "${extra_dirs[@]}"
echo exclude from mirror the cookbook dirs: "${cookbooks[@]}"

# mirror page data
mirror --no-warn --rsync-options "$rsync_options" $remotewiki/wiki.d $local_pmwiki_dir/wiki.d
mirror --no-warn --rsync-options "$rsync_options" $remotewiki/uploads $local_pmwiki_dir/uploads

# mirror config
# when  mirroring the cookbook and pub dirs we make sure that we keep the already
# present $mycookbookdir; making sure your cookbook folder does not get removed!
mirror --no-warn --rsync-options "$rsync_options" $remotewiki/local $local_pmwiki_dir/local

# mirror cookbook folder where we exclude given cookbook subdirs from mirroring
# create filter option to exclude cookbook dirs
filter_options=()
for cookbook in "${cookbooks[@]}"; do
    filter_options+=(-f "- $cookbook")
done
mirror --no-warn --rsync-options "$rsync_options" "${filter_options[@]}" $remotewiki/cookbook $local_pmwiki_dir/cookbook
mirror --no-warn --rsync-options "$rsync_options" "${filter_options[@]}" $remotewiki/pub $local_pmwiki_dir/pub

# mirror extra given subdirs
for extra_dir in "${extra_dirs[@]}"; do
    mirror --no-warn --rsync-options "$rsync_options" "$remotewiki/$extra_dir" "$local_pmwiki_dir/$extra_dir"
done
